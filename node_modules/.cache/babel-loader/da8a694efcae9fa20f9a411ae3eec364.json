{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/atulpradeep/Blindsidetask/src/components/VideoDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport \"../App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\n\nconst VideoDetails = ({\n  video,\n  currentUser,\n  commentList,\n  setComments\n}) => {\n  _s();\n\n  const [comment, setComment] = useState(\"\");\n  const [display, setDisplay] = useState([]);\n  const [commentView, setCommentView] = useState(false);\n  useEffect(() => {\n    console.log(commentList);\n  }, []);\n\n  const clickHandler = () => {\n    setDisplay(commentList[video.id.videoId]);\n    setCommentView(!commentView);\n  };\n\n  if (!video) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fa fa-spinner\",\n      children: \"  Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const arr = [...display, `${currentUser} : ${comment}`];\n    setDisplay(arr);\n    setComments(video.id.videoId, display);\n  };\n\n  const handle = e => {\n    e.preventDefault();\n    setComment(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: videoSrc,\n        title: \"video Player\",\n        className: \"w-100\",\n        style: {\n          height: \"380px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: video.snippet.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: video.snippet.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-weight-bold\",\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Type your comment\",\n            \"aria-label\": \"  Type your comment\",\n            \"aria-describedby\": \"input-group-right\",\n            value: comment,\n            onChange: handle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          onClick: clickHandler,\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 8\n        }, this), commentView ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: display.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(VideoDetails, \"I/2JA96Hw/OOrnmJXcfX+gm33rY=\");\n\n_c = VideoDetails;\nexport default VideoDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoDetails\");","map":{"version":3,"sources":["/Users/atulpradeep/Blindsidetask/src/components/VideoDetails.jsx"],"names":["React","useState","useEffect","VideoDetails","video","currentUser","commentList","setComments","comment","setComment","display","setDisplay","commentView","setCommentView","console","log","clickHandler","id","videoId","videoSrc","handleSubmit","e","preventDefault","arr","handle","target","value","height","snippet","title","description","map","item","index"],"mappings":";;;;;;AAAA,OAAO,YAAP;AACA,OAAO,sCAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAUC,EAAAA,WAAV;AAAuBC,EAAAA,WAAvB;AAAoCC,EAAAA;AAApC,CAAD,KAAsD;AAAA;;AAEzE,QAAK,CAACC,OAAD,EAASC,UAAT,IAAuBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAK,CAACS,OAAD,EAASC,UAAT,IAAuBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAK,CAACW,WAAD,EAAaC,cAAb,IAA+BZ,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACfY,IAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACA,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMU,YAAY,GAAE,MAAI;AACtBL,IAAAA,UAAU,CAACL,WAAW,CAACF,KAAK,CAACa,EAAN,CAASC,OAAV,CAAZ,CAAV;AACAL,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACD,GAHD;;AAIA,MAAI,CAACR,KAAL,EAAY;AACV,wBAAO;AAAK,MAAA,SAAS,EAAE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACH,QAAMe,QAAQ,GAAI,iCAAgCf,KAAK,CAACa,EAAN,CAASC,OAAQ,EAAnE;;AAEA,QAAME,YAAY,GAAGC,CAAD,IAAK;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,GAAG,GAAG,CAAC,GAAGb,OAAJ,EAAa,GAAEL,WAAY,MAAKG,OAAQ,EAAxC,CAAZ;AACAG,IAAAA,UAAU,CAACY,GAAD,CAAV;AACAhB,IAAAA,WAAW,CAACH,KAAK,CAACa,EAAN,CAASC,OAAV,EAAkBR,OAAlB,CAAX;AAEC,GAND;;AAOA,QAAMc,MAAM,GAAGH,CAAD,IAAK;AACjBA,IAAAA,CAAC,CAACC,cAAF;AACAb,IAAAA,UAAU,CAACY,CAAC,CAACI,MAAF,CAASC,KAAV,CAAV;AAEC,GAJH;;AAKA,sBACI;AAAA,4BACE;AAAA,6BACE;AACE,QAAA,GAAG,EAAEP,QADP;AAEE,QAAA,KAAK,EAAC,cAFR;AAGE,QAAA,SAAS,EAAC,OAHZ;AAIE,QAAA,KAAK,EAAE;AAAEQ,UAAAA,MAAM,EAAE;AAAV;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAA,kBAAKvB,KAAK,CAACwB,OAAN,CAAcC;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIzB,KAAK,CAACwB,OAAN,CAAcE;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF,eAIG;AAAM,QAAA,QAAQ,EAAGV,YAAjB;AAAA,gCACA;AAAG,UAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAED;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCAEA;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,SAAS,EAAC,cAA7B;AACA,YAAA,WAAW,EAAC,mBADZ;AACgC,0BAAW,qBAD3C;AAEA,gCAAiB,mBAFjB;AAEqC,YAAA,KAAK,EAAGZ,OAF7C;AAEsD,YAAA,QAAQ,EAAGgB;AAFjE;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,gBAFC,eASF;AAAI,UAAA,OAAO,EAAER,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATE,EAWFJ,WAAW,gBACV;AAAA,oBAECF,OAAO,CAACqB,GAAR,CAAY,CAACC,IAAD,EAAMC,KAAN,KAAc;AACxB,gCAAO;AAAA,wBAAgBD;AAAhB,eAAQC,KAAR;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFD;AAFD,yBADU,gBAQV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBC;AAAA;AAAA;AAAA;AAAA;AAAA,cAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADJ;AAyCC,CAxED;;GAAM9B,Y;;KAAAA,Y;AA0EN,eAAeA,YAAf","sourcesContent":["import \"../App.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React, { useState , useEffect} from 'react';\r\nconst VideoDetails = ({ video , currentUser, commentList, setComments}) => {\r\n  \r\n  const[comment,setComment] = useState(\"\");\r\n  const[display,setDisplay] = useState([]);\r\n  const[commentView,setCommentView] = useState(false);\r\n\r\n  useEffect(() => {\r\n   console.log(commentList);\r\n  }, [])\r\n   \r\n  const clickHandler= ()=>{\r\n    setDisplay(commentList[video.id.videoId])\r\n    setCommentView(!commentView);\r\n  }\r\n  if (!video) {\r\n    return <div className =\"fa fa-spinner\">  Loading...</div>;\r\n  }\r\nconst videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n\r\nconst handleSubmit =(e)=>{\r\ne.preventDefault();\r\nconst arr = [...display,`${currentUser} : ${comment}`]\r\nsetDisplay(arr);\r\nsetComments(video.id.videoId,display);\r\n\r\n}\r\nconst handle =(e)=>{\r\n  e.preventDefault();\r\n  setComment(e.target.value);\r\n  \r\n  }\r\nreturn (\r\n    <>\r\n      <div>\r\n        <iframe\r\n          src={videoSrc}\r\n          title=\"video Player\"\r\n          className=\"w-100\"\r\n          style={{ height: \"380px\" }}\r\n        ></iframe>\r\n      </div>\r\n      <div className=\"border p-2\">\r\n        <h4>{video.snippet.title}</h4>\r\n        <p>{video.snippet.description}</p>\r\n        \r\n         <form onSubmit= {handleSubmit}>\r\n         <p className=\"font-weight-bold\">Comments</p>\r\n        <div className=\"input-group\">\r\n       \r\n        <input type=\"text\" className=\"form-control\" \r\n        placeholder=\"Type your comment\" aria-label=\"  Type your comment\" \r\n        aria-describedby=\"input-group-right\" value ={comment} onChange ={handle} ></input>\r\n       </div>\r\n       \r\n       <h1 onClick={clickHandler}>Comments</h1>\r\n       {\r\n       commentView \r\n       ?<>\r\n       {\r\n         display.map((item,index)=>{\r\n           return <p key={index}>{item}</p>\r\n         })\r\n       }\r\n       </>\r\n       :<p>Comments</p>\r\n        }\r\n       </form>\r\n        </div>\r\n         \r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoDetails;\r\n"]},"metadata":{},"sourceType":"module"}